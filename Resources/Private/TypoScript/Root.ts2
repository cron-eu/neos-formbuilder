include: resource://TYPO3.TypoScript/Private/TypoScript/*
include: resource://TYPO3.Neos/Private/TypoScript/*

prototype(CRON.FormBuilder:FormElement) < prototype(TYPO3.Neos:Content) {
	templatePath = ${'resource://CRON.FormBuilder/Private/Templates/NodeTypes/' + String.replace(node.nodeData.nodeType, 'CRON.FormBuilder:', '') + '.html'}
	layoutName = 'Wrapper'

	attributes.id = ${node.identifier}
	attributes.name = ${'--cron_formbuilder-plugin[data][' + node.identifier + ']'}
	attributes.required = ${q(node).property('required')}
	attributes.required.@if.isRequired = ${Configuration.setting('CRON.FormBuilder.View.useRequiredAttribute') && this.attributes.required}
	attributes.class = 'form-control'

	node = ${node}
	flattenedErrors = ${flattenedErrors}
}

prototype(CRON.FormBuilder:CheckBox) < prototype(CRON.FormBuilder:FormElement) {
	layoutName = 'CheckboxWrapper'
	attributes.class = ''
}

prototype(CRON.FormBuilder:Input) < prototype(CRON.FormBuilder:FormElement) {
}

prototype(CRON.FormBuilder:Option) < prototype(CRON.FormBuilder:FormElement) {
}

prototype(CRON.FormBuilder:Select) < prototype(CRON.FormBuilder:FormElement) {
	elements = TYPO3.Neos:ContentCollection {
		nodePath = 'elements'
	}
}

prototype(CRON.FormBuilder:TextArea) < prototype(CRON.FormBuilder:FormElement) {
}


prototype(CRON.FormBuilder:Plugin) < prototype(TYPO3.Neos:Plugin) {
	package = 'CRON.FormBuilder'
	controller = 'FormBuilder'
	action = 'index'

	attributes = TYPO3.TypoScript:RawArray
	attributes.class = 'form-auto'
	attributes.role = 'form'

	elementsArray = ${q(node).children('elements').children().get()}
	
	elements = TYPO3.Neos:ContentCollection {
		nodePath = 'elements'
	}

	tsPath = 'formElementRenderer'
	tsPackageKey = 'CRON.FormBuilder'
}

formElementRenderer =  TYPO3.TypoScript:Case {
	fallback {
		condition = ${true}
		type = ${node.nodeData.nodeType}
	}
}
